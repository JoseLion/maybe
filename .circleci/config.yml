version: 2.1

executors:
  default:
    working_directory: ~/repo/maybe

    docker:
      - image: cimg/base:stable
        environment:
          JVM_OPTS: -Xmx4096m
          TERM: dumb

commands:
  install-jdk:
    description: Install and setup the JVM environmnet
    parameters:
      version:
        description: The JDK version to use
        type: string
        default: jdk-18

    steps:
      - run:
          name: Get JDK SHA256
          command: |
            mkdir ~/jdk
            wget "https://download.oracle.com/java/18/latest/<<parameters.version>>_linux-x64_bin.tar.gz.sha256" -O ~/jdk/<<parameters.version>>.sha256
      - restore_cache:
          key: v1-<<parameters.version>>-{{ checksum "~/jdk/<<parameters.version>>.sha256" }}

      - run:
          name: Download JDK 18
          command: |
            if [ ! -f ~/jdk/<<parameters.version>>.tar.gz ]; then
              wget -nc https://download.oracle.com/java/18/latest/<<parameters.version>>_linux-x64_bin.tar.gz -O ~/jdk/<<parameters.version>>.tar.gz
            fi
      - run:
          name: Install JDK
          command: |
            sudo tar xvf ~/jdk/<<parameters.version>>.tar.gz -C ~/jdk/
            sudo mkdir /opt/<<parameters.version>>
            sudo mv ~/jdk/<<parameters.version>>*/* /opt/<<parameters.version>>
            echo 'export JAVA_HOME=/opt/<<parameters.version>>' >> $BASH_ENV
            echo 'export PATH=$PATH:$JAVA_HOME/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Check Java version
          command: |
            echo $JAVA_HOME
            java --version
      - save_cache:
          paths:
            - ~/jdk/<<parameters.version>>.tar.gz
          key: v1-<<parameters.version>>-{{ checksum "~/jdk/<<parameters.version>>.sha256" }}

  setup:
    description: "Setup the environment to run tasks on CI"

    steps:
      - checkout:
          path: ~/repo/maybe

      - run:
          name: Provisioning
          command: |
            sed -i "s/{SIGNING_PASSWORD}/$SIGNING_PASSWORD/g" gradle.properties
            sed -i "s/{SONATYPE_USERNAME_TOKEN}/$SONATYPE_USERNAME_TOKEN/g" gradle.properties
            sed -i "s/{SONATYPE_PASSWORD_TOKEN}/$SONATYPE_PASSWORD_TOKEN/g" gradle.properties

      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}
            - v4-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-
            - v4-dependencies-

      - run:
          name: Dependencies
          command: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/repo/maybe/.gradle
            - ~/.gradle
          key: v4-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}

jobs:
  build:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Compile
          command: ./gradlew compileJava compileTestJava

      - run:
          name: SonarLint
          command: ./gradlew sonarlintMain sonarlintTest

      - run:
          name: Checkstyle
          command: ./gradlew checkstyleMain checkstyleTest

      - run:
          name: Test
          command: ./gradlew test

      - run:
          name: Build
          command:  ./gradlew build

      - run:
          name: Coverage
          command: ./gradlew jacocoTestReport

      - run:
          name: Upload reports
          command: bash <(curl -s https://codecov.io/bash)

  publish-snapshot:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Publish to Sonatype Snapshot OSSRH
          command: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository

  publish-release:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Publish to Maven Central
          command: ./gradlew -PreleaseVersion publishToSonatype closeAndReleaseSonatypeStagingRepository

workflows:
  main:
    jobs:
      - build

      - publish-snapshot:
          requires:
            - build
          filters:
            branches:
              only: main

      - publish-release:
          requires:
            - build
          filters:
            branches:
              only: release

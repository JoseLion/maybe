version: 2.1

executors:
  default:
    working_directory: ~/repo/maybe
    docker:
      - image: cimg/base:stable
        environment:
          JVM_OPTS: -Xmx4096m
          TERM: dumb
    resource_class: large

commands:
  install-jdk:
    description: Install and setup the JDK environmnet
    parameters:
      major:
        description: The JDK major version to use
        type: string
        default: "19"
      version:
        description: The JDK full version to use
        type: string
        default: "19.0.1"

    steps:
      - run:
          name: Get JDK SHA256
          command: |
            mkdir ~/jdk
            wget "https://download.oracle.com/java/<<parameters.major>>/archive/jdk-<<parameters.version>>_linux-x64_bin.tar.gz.sha256" -O ~/jdk/jdk-<<parameters.major>>.sha256
      - restore_cache:
          key: v1-<<parameters.major>>-{{ checksum "~/jdk/jdk-<<parameters.major>>.sha256" }}

      - run:
          name: Download JDK
          command: |
            if [ ! -f ~/jdk/jdk-<<parameters.major>>.tar.gz ]; then
              wget -nc https://download.oracle.com/java/<<parameters.major>>/archive/jdk-<<parameters.version>>_linux-x64_bin.tar.gz -O ~/jdk/jdk-<<parameters.major>>.tar.gz
            fi
      - run:
          name: Install JDK
          command: |
            sudo tar xvf ~/jdk/jdk-<<parameters.major>>.tar.gz -C ~/jdk/
            sudo mkdir /opt/jdk-<<parameters.major>>
            sudo mv ~/jdk/jdk-<<parameters.major>>*/* /opt/jdk-<<parameters.major>>
            echo 'export JAVA_HOME=/opt/jdk-<<parameters.major>>' >> $BASH_ENV
            echo 'export PATH=$PATH:$JAVA_HOME/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Check Java version
          command: |
            echo $JAVA_HOME
            java --version
      - save_cache:
          paths:
            - ~/jdk/jdk-<<parameters.major>>.tar.gz
          key: v1-<<parameters.major>>-{{ checksum "~/jdk/jdk-<<parameters.major>>.sha256" }}

  install-nodejs:
    description: Install NodeJS and Yarn dependencies

    steps:
      - run:
          name: Install NodeJS
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --install' >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Install yarn
          command: npm install -g yarn

      - restore_cache:
          keys:
            - yarn-v1-{{ checksum "yarn.lock" }}

      - run:
          name: Install packages
          command: yarn install --immutable

      - save_cache:
          paths:
            - ~/repos/maybe/.yarn/cache
          key: yarn-v1-{{ checksum "yarn.lock" }}

  setup:
    description: Setup the environment to run tasks on CI

    steps:
      - checkout:
          path: ~/repo/maybe

      - run:
          name: Provisioning
          command: |
            sed -i "s/{SIGNING_PASSWORD}/$SIGNING_PASSWORD/g" gradle.properties
            sed -i "s/{SONATYPE_USERNAME_TOKEN}/$SONATYPE_USERNAME_TOKEN/g" gradle.properties
            sed -i "s/{SONATYPE_PASSWORD_TOKEN}/$SONATYPE_PASSWORD_TOKEN/g" gradle.properties

      - restore_cache:
          keys:
            - v5-dependencies-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}

      - run:
          name: Dependencies
          command: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/repo/maybe/.gradle
            - ~/.gradle
          key: v5-dependencies-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}

jobs:
  build:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Compile
          command: ./gradlew compileJava compileTestJava

      - run:
          name: SonarLint
          command: ./gradlew sonarlintMain sonarlintTest

      - run:
          name: Checkstyle
          command: ./gradlew checkstyleMain checkstyleTest

      - run:
          name: Test
          command: ./gradlew test

      - run:
          name: Build
          command:  ./gradlew build

      - run:
          name: Coverage
          command: ./gradlew jacocoTestReport

      - run:
          name: Upload reports
          command: bash <(curl -s https://codecov.io/bash)

  publish:
    executor: default

    steps:
      - install-jdk

      - setup

      - install-nodejs

      - run:
          name: Publish to Maven Central
          command: yarn release

workflows:
  main:
    jobs:
      - build

      - publish:
          requires:
            - build
          filters:
            branches:
              only: release

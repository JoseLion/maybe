buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'jacoco'
  id 'java-library'

  id 'com.github.joselion.pretty-jupiter' version '0.1.2'
  id 'nebula.lint' version '16.2.3'
  id 'org.sonarqube' version '2.8'
}

version = '0.1.0'

dependencyLocking {
  lockAllConfigurations()
}

gradleLint {
  alwaysRun = false

  rules += [
    'all-dependency',
    'all-nebula-renames',
    'archaic-wrapper',
    'duplicate-dependency-class'
  ]
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'JoseLion_maybe'
    property 'sonar.organization', 'joselion'
    property 'sonar.host.url', 'https://sonarcloud.io'
  }
}

repositories {
  jcenter()
  mavenCentral()
}

def jupiterVersion = '5.5.2'

dependencies {
  testImplementation(group: 'org.assertj', name: 'assertj-core', version: '3.15.0')
  testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$jupiterVersion")

  testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$jupiterVersion")
}

test {
  useJUnitPlatform()
}

prettyJupiter {
  duration.threshold = 150
}

jar {
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version
    )
  }
}

jacocoTestReport {
  reports {
    xml.enabled(true)
    html.enabled(true)
  }
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"
